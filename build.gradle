buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "${mc_version}-${mod_version}"
group = 'com.lothrazar.fragiletorches' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'fragiletorches'



sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {

    version = "${mc_version}-${forge_version}"
    mappings = "stable_39"
    runDir = "run"
    makeObfSourceJar = false
    useDepAts = true
    //Makes those replacement changes to the main mod class.

    replace '@VERSION@', project.version
    //Replaces all text that matches the left side with the right.
    replace '@FINGERPRINT@', project.findProperty('signSHA1')
    //Makes those replacement changes to the main mod class.
    //My mod class is set in my project's gradle.properties file.
    replaceIn "ModFragileTorches.java"
}

task signJar(type: SignJar, dependsOn: reobfJar) {

    // findProperty allows us to reference the property without it existing. 
    // Using project.propName would cause the script to fail validation if 
    // the property did not exist. 
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

// Runs this task automatically when build is ran. 
build.dependsOn signJar

//Defines basic patterns for pulling various dependencies.
repositories {
	maven {
		url "https://maven.mcmoddev.com"
	}
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
		url 'http://maven.blamejared.com'
	}
	maven {
		url 'https://maven.mcmoddev.com/'
	}
	maven {
        url = "http://minecraft.curseforge.com/api/maven/"
    }
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
		url 'http://maven.blamejared.com'
	}
    maven {
    	name = "Progwml6 maven"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { //Guide API
		url "http://tehnut.info/maven/"
	}
	maven {
	    // location of a maven mirror for JEI files, as a fallback
	    name = "ModMaven"
	    url = "modmaven.k-4u.nl"
	}
	maven { url "http://maven.amadornes.com/" }
	ivy {
		name 'asie dependency mirror'
		artifactPattern "http://asie.pl/javadeps/[module]-[revision](-[classifier]).[ext]"
	}
}

dependencies {

//  deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}"

  // https://maven.mcmoddev.com/net/darkhax/enchdesc/EnchantmentDescriptions-1.12.2/1.1.9/
  // deobfCompile "net.darkhax.enchdesc:EnchantmentDescriptions-${mc_version}-${ench_descr_version}:+"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

